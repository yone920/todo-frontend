{"ast":null,"code":"import _slicedToArray from \"/Users/Lewamey/Desktop/Projects/todo-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Lewamey/Desktop/Projects/todo-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Category from './components/Category';\nimport TodoCategoryForm from './components/TodoCategoryForm';\nimport { userInfo } from 'os';\n\nconst App = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        hasError = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1]; // const [loading, setLoading] = useState(false)\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/categories\").then(res => res.json()).then(data => {\n      setTodos(data);\n    }).catch(err => setErrors(err));\n  }, []);\n\n  const addCategory = name => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(name)\n    };\n    fetch(\"http://localhost:3000/categories\", config).then(rsp => rsp.json()).then(data => {\n      setTodos(data);\n    });\n  };\n\n  const addTodo = data => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"http://localhost:3000/todos\", config).then(rsp => rsp.json()).then(data => {\n      setTodos(data);\n    });\n  };\n\n  const deleteTodo = todo => {\n    let config = {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    fetch(\"http://localhost:3000/todos/\".concat(todo), config).then(rsp => rsp.json()).then(data => {\n      setTodos(data);\n    });\n  };\n\n  const deleteCategory = category => {\n    let config = {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    fetch(\"http://localhost:3000/categories/\".concat(category), config).then(rsp => rsp.json()).then(data => {\n      setTodos(data);\n    });\n  };\n\n  const mapOverTodos = () => {\n    if (todos.length > -1) {\n      return todos.map((todo, index) => React.createElement(Category, {\n        key: index,\n        index: index,\n        todo: todo,\n        addTodo: addTodo,\n        deleteTodo: deleteTodo,\n        deleteCategory: deleteCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    id: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"logo-div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"main-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"ToDo List\"), React.createElement(\"span\", {\n    className: \"sub-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Get Organized\")), React.createElement(\"div\", {\n    className: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"SignUp\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"SignOut\"))), React.createElement(\"section\", {\n    id: \"section-b\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Create Category\"), React.createElement(FontAwesomeIcon, {\n    icon: \"coffee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(TodoCategoryForm, {\n    addCategory: addCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    id: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    id: \"section-a\",\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, mapOverTodos())), React.createElement(\"footer\", {\n    id: \"main-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"yonedesign\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Lewamey/Desktop/Projects/todo-frontend/src/App.js"],"names":["React","useState","useEffect","Category","TodoCategoryForm","userInfo","App","hasError","setErrors","todos","setTodos","fetch","then","res","json","data","catch","err","addCategory","name","config","method","headers","body","JSON","stringify","rsp","addTodo","deleteTodo","todo","deleteCategory","category","mapOverTodos","length","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Category from './components/Category';\nimport TodoCategoryForm from './components/TodoCategoryForm';\nimport { userInfo } from 'os';\n\nconst App = () => {\n\nconst [hasError, setErrors] = useState(false);\nconst [ todos, setTodos ] = useState([]);\n// const [loading, setLoading] = useState(false)\n\n\n\n\nuseEffect(() => {\n      fetch(\"http://localhost:3000/categories\")\n        .then( res =>  res.json())\n        .then(data => {\n            setTodos(data)\n        })  \n        .catch(err => setErrors(err));\n}, [])\n      \n\nconst addCategory = name => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type':'application/json',\n        'Accept':'application/json'\n      },\n      body: JSON.stringify(name)\n    }\n    fetch(\"http://localhost:3000/categories\", config)\n      .then(rsp => rsp.json())\n      .then(data => {\n        \n         setTodos(data)\n      })\n}\n\nconst addTodo = data => {\n  let config = {\n    method: \"POST\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify(data)\n  }\n  fetch(\"http://localhost:3000/todos\", config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\nconst deleteTodo = todo => {\n  let config = {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    }\n  }\n\n  fetch(`http://localhost:3000/todos/${todo}`, config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\nconst deleteCategory = category => {\n  let config = {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    }\n  }\n\n  fetch(`http://localhost:3000/categories/${category}`, config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\n\nconst mapOverTodos = () => {\n  if (todos.length > -1) {\n    return (\n           todos.map((todo, index) => (\n              <Category key={index} index={index} todo={todo} addTodo={addTodo} deleteTodo={deleteTodo} deleteCategory={deleteCategory} />\n          )) \n      \n    )\n  } \n}\n\n\n\n  return (\n    <div className=\"wrapper\">\n      <header id=\"header\">    \n         <h1 className=\"logo-div\">\n           <span className=\"main-logo\">ToDo List</span>\n           <span className=\"sub-logo\">Get Organized</span>\n        </h1>\n        <div className=\"menu\">\n          <span>Login</span>\n          <span>SignUp</span>\n          <span>SignOut</span>\n        </div>\n      </header>\n      <section id=\"section-b\">\n        <h3>Create Category</h3>\n        <FontAwesomeIcon icon=\"coffee\" />\n        <TodoCategoryForm  addCategory={addCategory}/>\n      </section>\n      <main id=\"main\">\n        <section id=\"section-a\" className=\"container\">\n          {mapOverTodos()}\n        </section>\n      </main>\n      <footer id=\"main-footer\">\n        <p>yonedesign</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}