{"ast":null,"code":"import _slicedToArray from \"/Users/Lewamey/Desktop/Projects/todo-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Lewamey/Desktop/Projects/todo-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\nimport TodoCategoryForm from './components/TodoCategoryForm';\n\nconst App = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        hasError = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1];\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/categories\").then(res => res.json()).then(data => {\n      setTodos(data);\n    }).catch(err => setErrors(err));\n  }, []);\n\n  const addCategory = name => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(name)\n    };\n    fetch(\"http://localhost:3000/categories\", config).then(rsp => rsp.json()).then(data => {\n      setTodos(data);\n    });\n  };\n\n  const addTodo = data => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"http://localhost:3000/todos\", config).then(rsp => rsp.json()).then(data => {\n      setTodos(data);\n    });\n  };\n\n  const mapOverTodos = () => {\n    if (todos.length > -1) {\n      return todos.map((todo, index) => React.createElement(Todo, {\n        key: index,\n        index: index,\n        todo: todo,\n        addTodo: addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"ToDo List\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, mapOverTodos()), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Create Category\"), React.createElement(TodoCategoryForm, {\n    addCategory: addCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Lewamey/Desktop/Projects/todo-frontend/src/App.js"],"names":["React","useState","useEffect","Todo","TodoCategoryForm","App","hasError","setErrors","todos","setTodos","fetch","then","res","json","data","catch","err","addCategory","name","config","method","headers","body","JSON","stringify","rsp","addTodo","mapOverTodos","length","map","todo","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\nimport TodoCategoryForm from './components/TodoCategoryForm';\n\nconst App = () => {\n\nconst [hasError, setErrors] = useState(false);\nconst [ todos, setTodos ] = useState([]);\n\nuseEffect(() => {\n      fetch(\"http://localhost:3000/categories\")\n        .then( res =>  res.json())\n        .then(data => {\n            setTodos(data)\n        })  \n        .catch(err => setErrors(err));\n}, [])\n      \n\nconst addCategory = name => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type':'application/json',\n        'Accept':'application/json'\n      },\n      body: JSON.stringify(name)\n    }\n    fetch(\"http://localhost:3000/categories\", config)\n      .then(rsp => rsp.json())\n      .then(data => {\n        \n         setTodos(data)\n      })\n}\n\nconst addTodo = data => {\n  let config = {\n    method: \"POST\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify(data)\n  }\n  fetch(\"http://localhost:3000/todos\", config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\nconst mapOverTodos = () => {\n  if (todos.length > -1) {\n    return (\n           todos.map((todo, index) => (\n              <Todo key={index} index={index} todo={todo} addTodo={addTodo}/>\n          )) \n      \n    )\n  }\n}\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div>    \n          ToDo List\n        </div>\n        <div>\n          {mapOverTodos()}\n        </div>\n        <div>\n          <h3>Create Category</h3>\n          <TodoCategoryForm  addCategory={addCategory}/>\n        </div>\n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}