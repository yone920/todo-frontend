{"ast":null,"code":"import _slicedToArray from \"/Users/Lewamey/Desktop/Projects/todo-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Lewamey/Desktop/Projects/todo-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\nimport TodoForm from './components/TodoForm';\n\nconst App = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        hasError = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1];\n\n  useEffect(() => {\n    fetch('http://localhost:3000/categories').then(res => res.json()).then(data => {\n      setTodos(data);\n    });\n  }, []); //   useEffect(() => {\n  //   async function fetchData() {\n  //     const res = await fetch(\"http://localhost:3000/categories\");\n  //     res\n  //       .json()\n  //       .then(res => setTodos(res))\n  //       .catch(err => setErrors(err));\n  //   }\n  //   fetchData();\n  // });\n\n  const addTodo = text => {\n    const NewTodo = [...todos, {\n      text\n    }];\n    setTodos(NewTodo);\n  }; // debugger\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"ToDo List\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Lewamey/Desktop/Projects/todo-frontend/src/App.js"],"names":["React","useState","useEffect","Todo","TodoForm","App","hasError","setErrors","todos","setTodos","fetch","then","res","json","data","addTodo","text","NewTodo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAEYJ,QAAQ,CAAC,KAAD,CAFpB;AAAA;AAAA,QAEXK,QAFW;AAAA,QAEDC,SAFC;;AAAA,qBAGUN,QAAQ,CAAC,EAAD,CAHlB;AAAA;AAAA,QAGVO,KAHU;AAAA,QAGHC,QAHG;;AAMhBP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZL,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT,CANgB,CAchB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGF,QAAMC,OAAO,GAAGC,IAAI,IAAI;AACtB,UAAMC,OAAO,GAAG,CAAE,GAAGT,KAAL,EAAY;AAAEQ,MAAAA;AAAF,KAAZ,CAAhB;AACAP,IAAAA,QAAQ,CAACQ,OAAD,CAAR;AACD,GAHD,CA3BkB,CAiClB;;;AACE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAW,IAAA,OAAO,EAAEF,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF,CADF;AAmBD,CArDD;;AAuDA,eAAeV,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\nimport TodoForm from './components/TodoForm';\n\nconst App = () => {\n\nconst [hasError, setErrors] = useState(false);\nconst [ todos, setTodos ] = useState([]);\n\n\n  useEffect(() => {\n    fetch('http://localhost:3000/categories')\n      .then(res => res.json())\n      .then(data => {\n        setTodos(data)\n      })\n  }, []);\n \n  //   useEffect(() => {\n  //   async function fetchData() {\n  //     const res = await fetch(\"http://localhost:3000/categories\");\n  //     res\n  //       .json()\n  //       .then(res => setTodos(res))\n  //       .catch(err => setErrors(err));\n  //   }\n\n  //   fetchData();\n  // });\n\n\nconst addTodo = text => {\n  const NewTodo = [ ...todos, { text }]\n  setTodos(NewTodo)\n}\n\n\n// debugger\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div>    \n          ToDo List\n        </div>\n        <div>\n            {/* { todos.map((todo, index) => (\n                <Todo key={index} index={index} todo={todo} />\n            )) } */}\n        </div>\n       \n        <div>\n          <TodoForm  addTodo={addTodo}/>\n        </div>\n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}