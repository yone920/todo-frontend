{"ast":null,"code":"import _slicedToArray from\"/Users/Lewamey/Desktop/Projects/todo-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';export default function TodoForm(_ref){var category=_ref.category,addTodo=_ref.addTodo;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var handleSubmit=function handleSubmit(e){e.preventDefault();if(!value)return;addTodo({text:value,category_id:category});setValue('');};return React.createElement(\"div\",null,React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(\"input\",{type:\"text\",className:\"input\",value:value,onChange:function onChange(e){return setValue(e.target.value);},placeholder:\"Todo...\"})));}","map":{"version":3,"sources":["/Users/Lewamey/Desktop/Projects/todo-frontend/src/components/TodoForm.js"],"names":["React","useState","TodoForm","category","addTodo","value","setValue","handleSubmit","e","preventDefault","text","category_id","target"],"mappings":"gIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,cAAe,SAASC,CAAAA,QAAT,MAA0C,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CAAZC,OAAY,MAAZA,OAAY,eACxBH,QAAQ,CAAC,EAAD,CADgB,wCAC7CI,KAD6C,eACrCC,QADqC,eAGrD,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACtBA,CAAC,CAACC,cAAF,GACA,GAAI,CAACJ,KAAL,CAAY,OACZD,OAAO,CAAC,CAACM,IAAI,CAAEL,KAAP,CACQM,WAAW,CAAER,QADrB,CAAD,CAAP,CAEAG,QAAQ,CAAC,EAAD,CAAR,CACH,CAND,CAUA,MACI,gCACI,4BAAM,QAAQ,CAAEC,YAAhB,EACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,OAA7B,CAAqC,KAAK,CAAEF,KAA5C,CAAmD,QAAQ,CAAE,kBAAAG,CAAC,QAAIF,CAAAA,QAAQ,CAACE,CAAC,CAACI,MAAF,CAASP,KAAV,CAAZ,EAA9D,CAA4F,WAAW,CAAC,SAAxG,EADJ,CADJ,CADJ,CAOH","sourcesContent":["import React, { useState } from 'react'\n\nexport default function TodoForm({ category, addTodo  }) {\n    const [ value,  setValue ] = useState('');\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (!value) return;\n        addTodo({text: value, \n                        category_id: category});\n        setValue('');\n    }\n\n    \n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Todo...\"></input>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}