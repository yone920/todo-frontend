{"ast":null,"code":"import _slicedToArray from \"/Users/Lewamey/Desktop/Projects/todo-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Lewamey/Desktop/Projects/todo-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\nimport TodoCategoryForm from './components/TodoCategoryForm';\n\nconst App = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        hasError = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1];\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/categories\").then(res => res.json()).then(data => {\n      setTodos(data);\n    });\n  }, []); //   useEffect(() => {\n  //   async function fetchData() {\n  //     const res = await fetch(\"http://localhost:3000/categories\");\n  //     res\n  //       .json()\n  //       .then(res => setTodos(res))\n  //       .catch(err => setErrors(err));\n  //   }\n  //   fetchData();\n  // });\n\n  const addCategory = text => {\n    const NewTodo = [...todos, {\n      text\n    }];\n    setTodos(NewTodo);\n    useEffect(() => {\n      let config = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(text)\n      };\n      fetch(\"http://localhost:3000/projects\", config).then(rsp => rsp.json()).then(data => {\n        setTodos(data);\n      });\n    });\n  }; // debugger\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"ToDo List\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, todos.map((todo, index) => React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Create Category\"), React.createElement(TodoCategoryForm, {\n    addCategory: addCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Lewamey/Desktop/Projects/todo-frontend/src/App.js"],"names":["React","useState","useEffect","Todo","TodoCategoryForm","App","hasError","setErrors","todos","setTodos","fetch","then","res","json","data","addCategory","text","NewTodo","config","method","headers","body","JSON","stringify","rsp","map","todo","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAEYJ,QAAQ,CAAC,KAAD,CAFpB;AAAA;AAAA,QAEXK,QAFW;AAAA,QAEDC,SAFC;;AAAA,qBAGUN,QAAQ,CAAC,EAAD,CAHlB;AAAA;AAAA,QAGVO,KAHU;AAAA,QAGHC,QAHG;;AAKlBP,EAAAA,SAAS,CAAC,MAAM;AACVQ,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACSC,GAAG,IAAKA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACVL,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACH,KAJH;AAKL,GANQ,EAMN,EANM,CAAT,CALkB,CAgBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGF,QAAMC,WAAW,GAAGC,IAAI,IAAI;AAC1B,UAAMC,OAAO,GAAG,CAAE,GAAGT,KAAL,EAAY;AAAEQ,MAAAA;AAAF,KAAZ,CAAhB;AACAP,IAAAA,QAAQ,CAACQ,OAAD,CAAR;AAEAf,IAAAA,SAAS,CAAC,MAAM;AACd,UAAIgB,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,OAAO,EAAE;AACP,0BAAe,kBADR;AAEP,oBAAS;AAFF,SAFE;AAMXC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AANK,OAAb;AAQAN,MAAAA,KAAK,CAAC,gCAAD,EAAmCQ,MAAnC,CAAL,CACGP,IADH,CACQa,GAAG,IAAIA,GAAG,CAACX,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACXL,QAAAA,QAAQ,CAACK,IAAD,CAAR;AACF,OAJH;AAKD,KAdQ,CAAT;AAeD,GAnBD,CA5BkB,CAkDlB;;;AACE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMN,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACR,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,KAAK,EAAEA,KAAzB;AAAgC,IAAA,IAAI,EAAED,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADN,CAJF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,gBAAD;AAAmB,IAAA,WAAW,EAAEX,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,CADF,CADF;AAoBD,CAvED;;AAyEA,eAAeV,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Todo from './components/Todo';\nimport TodoCategoryForm from './components/TodoCategoryForm';\n\nconst App = () => {\n\nconst [hasError, setErrors] = useState(false);\nconst [ todos, setTodos ] = useState([]);\n\nuseEffect(() => {\n      fetch(\"http://localhost:3000/categories\")\n        .then( res =>  res.json())\n        .then(data => {\n            setTodos(data)\n        })  \n}, [])\n      \n\n\n\n  //   useEffect(() => {\n  //   async function fetchData() {\n  //     const res = await fetch(\"http://localhost:3000/categories\");\n  //     res\n  //       .json()\n  //       .then(res => setTodos(res))\n  //       .catch(err => setErrors(err));\n  //   }\n  //   fetchData();\n  // });\n\n\nconst addCategory = text => {\n  const NewTodo = [ ...todos, { text }]\n  setTodos(NewTodo)\n  \n  useEffect(() => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type':'application/json',\n        'Accept':'application/json'\n      },\n      body: JSON.stringify(text)\n    }\n    fetch(\"http://localhost:3000/projects\", config)\n      .then(rsp => rsp.json())\n      .then(data => {\n         setTodos(data)\n      })\n  })\n}\n\n\n// debugger\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div>    \n          ToDo List\n        </div>\n        <div>\n            { todos.map((todo, index) => (\n                <Todo key={index} index={index} todo={todo} />\n            )) }\n        </div>\n       \n        <div>\n          <h3>Create Category</h3>\n          <TodoCategoryForm  addCategory={addCategory}/>\n        </div>\n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}