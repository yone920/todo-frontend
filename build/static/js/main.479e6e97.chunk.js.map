{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/Category.js","components/TodoCategoryForm.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["TodoForm","category","addTodo","useState","value","setValue","form","setForm","handleSubmit","e","preventDefault","text","category_id","href","onClick","htmlFor","className","xmlns","width","height","viewBox","d","id","name","onSubmit","type","onChange","target","placeholder","todoForm","Todo","singleTodo","deleteTodo","markedOrNot","checked","setChecked","markCheked","class","Category","todo","index","deleteCategory","display","setDisplay","onDoubleClick","todos","map","TodoCategoryForm","addCategory","changePopup","Home","setErrors","setTodos","popup","setPopup","useEffect","fetch","then","res","json","data","catch","err","config","method","headers","body","JSON","stringify","rsp","handleClickClose","marked","console","log","src","length","key","mapOverTodos","displayFormPopup","library","add","faPlus","faEnvelope","faKey","faShoppingCart","faBook","faTimes","faArrowRight","faSignInAlt","faUserPlus","faCheck","faAngleDoubleRight","faAngleDoubleLeft","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.479e6e97.chunk.js","sourcesContent":["import React, { useState, Fragment } from 'react'\n\nexport default function TodoForm({ category, addTodo  }) {\n    const [ value,  setValue ] = useState('');\n    const [form, setForm] = useState(false);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (!value) return;\n        addTodo({text: value, \n                        category_id: category});\n        setValue('');\n        setForm(!form);\n    }\n\n    \n    const todoForm = () => {\n        if (form) {\n            return (\n                <form className=\"todo-submit\" id=\"todo-submit\" name=\"nfetene\" onSubmit={handleSubmit}>\n                    <input type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Todo...\"></input>\n                    {/* <input type=\"submit\" className=\"todo-add\"/> */}\n                </form>\n            )\n        }\n    }\n\n    const handleClick = e => {\n        setForm(!form);\n    }\n    \n\n    return (\n        <Fragment>\n            <a href=\"#todo-submit\" onClick={handleClick} htmlFor=\"nfetene\">\n                <svg className=\"icon icon-plus\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                    <path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/>\n                </svg>\n            </a>\n            {todoForm()}\n        </Fragment>\n    )\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default function Todo({singleTodo, deleteTodo, markedOrNot}) {\n\n    const [checked, setChecked] = useState(false)\n\n    const handleClick = e => {\n        deleteTodo(singleTodo.id)\n    }\n\n    const handleCheck = e => {\n        setChecked(!checked);\n        markedOrNot(checked);\n    }\n    \n    const markCheked = () => {\n        if (checked) {\n            return \"todo__checked\"\n        }\n    }\n    \n    \n    return (\n            <div className=\"todo__single-todo\">\n                <div className=\"todo__icon-box\">\n                    <input type=\"checkbox\" onChange={handleCheck} name=\"todo-checkbox\" className=\"todo__checkbox\" id=\"\"/>\n                </div>\n                <div className={`todo__name ${markCheked()}`} ><p>{singleTodo.text}</p></div>\n                <div className=\"todo__delete-button\" onClick={handleClick}>                        \n                    <svg viewBox=\"0 0 32 32\" class=\"icon icon-clear\" viewBox=\"0 0 32 32\" aria-hidden=\"true\">\n                        <path d=\"M7.004 23.087l7.08-7.081-7.07-7.071L8.929 7.02l7.067 7.069L23.084 7l1.912 1.913-7.089 7.093 7.075 7.077-1.912 1.913-7.074-7.073L8.917 25z\"/>\n                    </svg>\n                </div>\n            </div>\n    )\n}\n","import React, { Fragment, useState } from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\n\nexport default function Category({todo, index, addTodo, deleteTodo, deleteCategory, markedOrNot}) {\n\n    const [display, setDisplay] = useState(true);\n\n\n    const mapOverTodos = () => {\n           return todo.todos.map((singleTodo) => {\n                return <Todo singleTodo={singleTodo} deleteTodo={deleteTodo} markedOrNot={markedOrNot}/>\n            }) \n    }\n\n    const handleClick = e => {\n        deleteCategory(todo.id)\n    }\n\n    const handleTodoBox = e => {\n        setDisplay(!display);\n    }\n\n    return (\n        <Fragment>\n            <div className=\"category\">\n                <div onDoubleClick={handleTodoBox} className=\"category__header\">\n                    <div className=\"category__name\">\n                        <h4>{todo.name}</h4>\n                    </div>\n                    <div className=\"category__delete\" >\n                        <svg viewBox=\"0 0 32 32\" class=\"icon icon-clear\" onClick={handleClick} viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M7.004 23.087l7.08-7.081-7.07-7.071L8.929 7.02l7.067 7.069L23.084 7l1.912 1.913-7.089 7.093 7.075 7.077-1.912 1.913-7.074-7.073L8.917 25z\"/></svg>\n                        {/* <svg viewBox=\"0 0 32 32\" class=\"icon icon-chevron-bottom\" onClick={handleTodoBox} viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16.003 18.626l7.081-7.081L25 13.46l-8.997 8.998-9.003-9 1.917-1.916z\"/></svg> */}\n                    </div>    \n                </div>\n                { display ? \n                <Fragment>\n                <div className=\"todo\">\n                    {mapOverTodos()}\n                </div>   \n                <div className=\"category__new-form\">\n                    <TodoForm category={todo.id}  addTodo={addTodo}/>\n                </div>\n                </Fragment>\n                : null }\n            </div>\n        </Fragment>\n    )\n}\n","import React, { useState } from 'react';\n\n\nexport default function TodoCategoryForm({ addCategory, changePopup }) {\n\n   const [value, setValue] = useState(\"\");\n\n   const handleSubmit = e => {\n        e.preventDefault()\n        if (!value) return;\n        addCategory({name: value});\n        setValue('');\n        changePopup();\n   }\n\n\n    return (\n        <div className=\"category-form\">\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Category...\"></input>\n                <input type=\"submit\" id=\"submit\"></input>\n            </form>\n        </div>\n    )\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Category from './Category';\nimport TodoCategoryForm from './TodoCategoryForm';\n\n\nconst Home = () => {\n\nconst [hasError, setErrors] = useState(false);\nconst [ todos, setTodos ] = useState([]);\nconst [popup, setPopup] = useState(false);\n\nuseEffect(() => {\n      fetch(\"https://todo-yone-backend.herokuapp.com/categories\")\n        .then( res =>  res.json())\n        .then(data => {\n            setTodos(data)\n        })  \n        .catch(err => setErrors(err));\n}, [])\n      \n\nconst addCategory = name => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type':'application/json',\n        'Accept':'application/json'\n      },\n      body: JSON.stringify(name)\n    }\n    fetch(\"https://todo-yone-backend.herokuapp.com/categories\", config)\n      .then(rsp => rsp.json())\n      .then(data => {\n        \n         setTodos(data)\n      })\n}\n\nconst addTodo = data => {\n  let config = {\n    method: \"POST\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify(data)\n  }\n  fetch(\"https://todo-yone-backend.herokuapp.com/todos\", config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\nconst deleteTodo = todo => {\n  let config = {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    }\n  }\n\n  fetch(`https://todo-yone-backend.herokuapp.com/todos/${todo}`, config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\nconst deleteCategory = category => {\n  let config = {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    }\n  }\n\n  fetch(`https://todo-yone-backend.herokuapp.com/categories/${category}`, config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\nconst displayFormPopup = () => {\n  if (popup) {\n    return (\n            <div className=\"popup\" id=\"popup\">\n                  <div className=\"popup__content\">\n                    <div className=\"popup__header\">\n                      <h3>Create A Category</h3>\n                    </div>\n                    <a href=\"#home-page\" className=\"popup__close\" onClick={handleClickClose}>\n                      <svg viewBox=\"0 0 32 32\" class=\"icon icon-clear\" viewBox=\"0 0 32 32\" aria-hidden=\"true\">\n                            <path d=\"M7.004 23.087l7.08-7.081-7.07-7.071L8.929 7.02l7.067 7.069L23.084 7l1.912 1.913-7.089 7.093 7.075 7.077-1.912 1.913-7.074-7.073L8.917 25z\"/>\n                      </svg>\n                    </a>\n                    <div className=\"popup__create-category-box\">\n                      <TodoCategoryForm  addCategory={addCategory} changePopup={changePopup}/>\n                    </div>\n                  </div>\n                </div>\n    )\n  }\n}\n\nconst handleClick = e => {\n  setPopup(!popup);\n}\n\nconst handleClickClose = e => {\n  setPopup(!popup);\n}\n\nconst changePopup = () => {\n  setPopup(!popup);\n}\n\nconst mapOverTodos = () => {\n  if (todos.length > -1) {\n    return (\n           todos.map((todo, index) => (\n              <Category key={index} index={index} todo={todo} addTodo={addTodo} deleteTodo={deleteTodo} deleteCategory={deleteCategory} markedOrNot={markedOrNot} />\n          )) \n      \n    )\n  } \n}\n\nconst markedOrNot = (marked) => {\n  console.log(marked);\n}\n\n\n\n  return (\n    <Fragment>\n      <div className=\"wrapper\">\n        <div className=\"home\" id=\"home-page\">\n              <div className=\"header\">\n                <div className=\"header__logo-box\">\n                  \n                  <img src=\"img/my-todo-logo-2.png\"></img>\n                </div>\n                {/* <div className=\"header__menu\">\n                  <span>Login</span>\n                  <span>SignUp</span>\n                  <span>SignOut</span>\n                </div> */}\n                {/* <div className=\"mobile-nav\">\n                  <input type=\"checkbox\" className=\"mobile-nav__checkbox\" id=\"navi-toggle\"></input>\n                  <label htmlFor=\"navi-toggle\" className=\"mobile-nav__button\"></label>\n                  <div className=\"mobile-nav__background\">&nbsp;</div>\n                  <nav className=\"mobile-nav__nav\">\n                    <ul className=\"mobile-nav__list\">\n                      <li className=\"mobile-nav__item\"><a href=\"#\" className=\"mobile-nav__link\">Login</a></li>\n                      <li className=\"mobile-nav__item\"><a href=\"#\" className=\"mobile-nav__link\">SignUp</a></li>\n                      <li className=\"mobile-nav__item\"><a href=\"#\" className=\"mobile-nav__link\">Logout</a></li>\n                    </ul>\n                  </nav>\n                </div> */}\n              </div>  \n              <a href=\"#popup\" className=\"home__create-category-button\" onClick={handleClick}>\n                <svg className=\"icon icon-plus\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                  <path d=\"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"/>\n                </svg>\n              </a>\n              <div className=\"categories\">\n                  {mapOverTodos()}\n              </div> \n          \n              {displayFormPopup()}\n      </div>\n    </div>\n\n      <footer className=\"footer\">\n          <p>@yonedesign</p>\n      </footer> \n    </Fragment>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport Home from './components/Home'\nimport './stylesheets/main.scss'\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPlus, faEnvelope, faKey, faShoppingCart, faBook, faTimes, faArrowRight, faSignInAlt, faUserPlus, faCheck, faAngleDoubleRight, faAngleDoubleLeft } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add( faPlus, faEnvelope, faKey, faShoppingCart, faBook, faTimes, faArrowRight, faSignInAlt, faUserPlus, faCheck, faAngleDoubleRight, faAngleDoubleLeft);\n\n\n\n\nconst App = () => {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}