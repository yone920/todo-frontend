{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/Category.js","components/TodoCategoryForm.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["TodoForm","category","addTodo","useState","value","setValue","onSubmit","e","preventDefault","text","category_id","type","className","onChange","target","placeholder","Todo","singleTodo","deleteTodo","onClick","id","Category","todo","index","deleteCategory","name","todos","map","TodoCategoryForm","addCategory","Home","setErrors","setTodos","useEffect","fetch","then","res","json","data","catch","err","config","method","headers","body","JSON","stringify","rsp","icon","length","key","mapOverTodos","library","add","faPlus","faEnvelope","faKey","faShoppingCart","faBook","faTimes","faArrowRight","faSignInAlt","faUserPlus","faCheck","faAngleDoubleRight","faAngleDoubleLeft","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15f96e97.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport default function TodoForm({ category, addTodo  }) {\n    const [ value,  setValue ] = useState('');\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (!value) return;\n        addTodo({text: value, \n                        category_id: category});\n        setValue('');\n    }\n\n    \n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Todo...\"></input>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Todo({singleTodo, deleteTodo}) {\n\n    const handleClick = e => {\n        deleteTodo(singleTodo.id)\n    }\n\n    \n    return (\n        <div className=\"single-todo\">\n            <div className=\"single-todo-name\" ><p>{singleTodo.text}</p></div>\n            <div className=\"single-todo-delete-button\" onClick={handleClick}><button>x</button></div>\n        </div>\n    )\n}\n","import React from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\n\nexport default function Category({todo, index, addTodo, deleteTodo, deleteCategory}) {\n\n\n    const mapOverTodos = () => {\n           return todo.todos.map((singleTodo) => {\n                return  <Todo singleTodo={singleTodo} deleteTodo={deleteTodo} />\n            }) \n    }\n\n    const handleClick = e => {\n        deleteCategory(todo.id)\n    }\n\n    return (\n        <div className=\"category-list\">\n            <div className=\"category-name-button\">\n                <div className=\"category-name\">\n                    <h4>{todo.name}</h4>\n                </div>\n                <div className=\"category-delete-button\" onClick={handleClick}>\n                    <button>x</button>\n                </div>\n            </div>\n        <div className=\"todo-list\">\n            {mapOverTodos()}\n        </div>\n            <div>\n                <TodoForm category={todo.id}  addTodo={addTodo}/>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\n\nexport default function TodoCategoryForm({ addCategory }) {\n\n   const [value, setValue] = useState(\"\");\n\n   const handleSubmit = e => {\n        e.preventDefault()\n        if (!value) return;\n        addCategory({name: value});\n        setValue('');\n   }\n\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Category...\"></input>\n                <input type=\"submit\"></input>\n            </form>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport '../stylesheets/home.scss';\nimport Category from './Category';\nimport TodoCategoryForm from './TodoCategoryForm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Home = () => {\n\nconst [hasError, setErrors] = useState(false);\nconst [ todos, setTodos ] = useState([]);\n\nuseEffect(() => {\n      fetch(\"https://todo-yone-backend.herokuapp.com/categories\")\n        .then( res =>  res.json())\n        .then(data => {\n            setTodos(data)\n        })  \n        .catch(err => setErrors(err));\n}, [])\n      \n\nconst addCategory = name => {\n    let config = {\n      method: \"POST\",\n      headers: {\n        'Content-Type':'application/json',\n        'Accept':'application/json'\n      },\n      body: JSON.stringify(name)\n    }\n    fetch(\"https://todo-yone-backend.herokuapp.com/categories\", config)\n      .then(rsp => rsp.json())\n      .then(data => {\n        \n         setTodos(data)\n      })\n}\n\nconst addTodo = data => {\n  let config = {\n    method: \"POST\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    },\n    body: JSON.stringify(data)\n  }\n  fetch(\"https://todo-yone-backend.herokuapp.com/todos\", config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\nconst deleteTodo = todo => {\n  let config = {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    }\n  }\n\n  fetch(`https://todo-yone-backend.herokuapp.com/todos/${todo}`, config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\nconst deleteCategory = category => {\n  let config = {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type':'application/json',\n      'Accept':'application/json'\n    }\n  }\n\n  fetch(`https://todo-yone-backend.herokuapp.com/categories/${category}`, config)\n    .then(rsp => rsp.json())\n    .then(data => {\n       setTodos(data)\n    })\n}\n\n\nconst mapOverTodos = () => {\n  if (todos.length > -1) {\n    return (\n           todos.map((todo, index) => (\n              <Category key={index} index={index} todo={todo} addTodo={addTodo} deleteTodo={deleteTodo} deleteCategory={deleteCategory} />\n          )) \n      \n    )\n  } \n}\n\n\n\n  return (\n    <div className=\"wrapper\">\n        <div className=\"header-logo\">\n            <h1 className=\"logo-div\">\n            <span className=\"main-logo\">ToDo List</span>\n            <span className=\"sub-logo\">Get Organized</span>\n            </h1>\n        </div>    \n        <div className=\"header-menu\">\n          <span>Login</span>\n          <span>SignUp</span>\n          <span>SignOut</span>\n        </div>\n        <div className=\"create-category-button\">\n            <button type=\"button\" className=\"add-category\"><FontAwesomeIcon  icon=\"plus\"></FontAwesomeIcon></button> \n            <TodoCategoryForm  addCategory={addCategory} />\n         </div>\n        <main id=\"main\">\n            <section id=\"section-a\" className=\"container\">\n            {mapOverTodos()}\n            </section>\n        </main>\n        <footer id=\"main-footer\">\n            <p>yonedesign</p>\n        </footer>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport './App.scss';\nimport Home from './components/Home'\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPlus, faEnvelope, faKey, faShoppingCart, faBook, faTimes, faArrowRight, faSignInAlt, faUserPlus, faCheck, faAngleDoubleRight, faAngleDoubleLeft } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add( faPlus, faEnvelope, faKey, faShoppingCart, faBook, faTimes, faArrowRight, faSignInAlt, faUserPlus, faCheck, faAngleDoubleRight, faAngleDoubleLeft);\n\n\n\n\nconst App = () => {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}